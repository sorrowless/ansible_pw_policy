---
- name: Pwsec | Override default data with user one
  set_fact:
    pwsec: "{{ pwsec_common | combine(pwsec_group, pwsec_host, recursive=True) }}"
  tags:
    - always

- name: Include preliminary checks
  import_tasks: prechecks.yml

- name: Install needed security packages
  package:
    name: "{{ pwsec.packages }}"
    state: present

- name: Ensure pam_tty_audit file
  template:
    src: pam_tty_audit
    dest: /usr/share/pam-configs/pam_tty_audit
    mode: 0644
    owner: root
    group: root

- name: Ensure pwhistory file
  template:
    src: pwhistory
    dest: /usr/share/pam-configs/pwhistory
    mode: 0644
    owner: root
    group: root

- name: Ensure pwquality file
  template:
    src: pwquality
    dest: /usr/share/pam-configs/pwquality
    mode: 0644
    owner: root
    group: root

- name: Ensure maximum number of days a password may be used
  lineinfile:
    path: /etc/login.defs
    state: present
    regexp: '^PASS_MAX_DAYS.*'
    line: 'PASS_MAX_DAYS {{ pwsec.pass_max_days }}'
    mode: 0644
    owner: root
    group: root

- name: Ensure number of days warning given before a password expires
  lineinfile:
    path: /etc/login.defs
    state: present
    regexp: '^PASS_WARN_AGE.*'
    line: 'PASS_WARN_AGE {{ pwsec.pass_warn_age }}'
    mode: 0644
    owner: root
    group: root

- name: Ensure number of days allowed between password changes
  lineinfile:
    path: /etc/login.defs
    state: present
    regexp: '^PASS_MIN_DAYS.*'
    line: 'PASS_MIN_DAYS {{ pwsec.pass_min_days }}'
    mode: 0644
    owner: root
    group: root

- name: Ensure login-notify script
  template:
    src: login-notify
    dest: /usr/local/bin/login-notify
    # it contains private token id, so close for others
    mode: 0750
    owner: root
    group: root
  when: pwsec.notify_on_login
  tags:
    - notify

- name: Ensure notify on login in pam session
  lineinfile:
    path: /etc/pam.d/common-session
    state: present
    insertafter: EOF
    line: 'session optional pam_exec.so /usr/local/bin/login-notify'
    mode: 0644
    owner: root
    group: root
  when: pwsec.notify_on_login
  tags:
    - notify

- name: Create temporary dir for security scripts
  tempfile:
    prefix: ansible.sec
    state: directory
  register: sec_dir
  changed_when: false

- name: Copy script to check current users password expiration settings
  copy:
    src: check_users.sh
    dest: "{{ sec_dir.path }}/check_users.sh"
    mode: 0755
    owner: root
    group: root
  changed_when: False

- name: Run expiration check for existing users
  command: "{{ sec_dir.path }}/check_users.sh {{ pwsec.pass_max_days }} {{ pwsec.pass_warn_age }} {{ ansible_user }}"
  register: usercheck
  changed_when: usercheck.rc == 2
  failed_when: usercheck.rc != 0 and usercheck.rc != 2
